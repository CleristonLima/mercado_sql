----- Tabelas do mercado -----
------------ ADM -------------


CREATE TABLE [dbo].[TB_AD_LOGIN](
	[ID_LOGIN] [int] NOT NULL,
	[NAME_PEOPLE] [nvarchar](50) NOT NULL,
	[LOGIN_NAME] [nvarchar](15) NOT NULL,
	[PASSWORD_LOGIN] [nvarchar](30) NOT NULL,
	[EMAIL] [nvarchar](100) NOT NULL,
	[BLOCK_USER] [bit] NOT NULL,
	[ID_PROFILE] [int] NOT NULL,
	[USER_INSERT] [nvarchar](15) NOT NULL,
	[DATE_INSERT] [datetime] NOT NULL,
	[USER_UPDATE] [nvarchar](15) NULL,
	[DATE_UPDATE] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[ID_LOGIN] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
UNIQUE NONCLUSTERED 
(
	[LOGIN_NAME] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[TB_AD_LOGIN]  WITH CHECK ADD  CONSTRAINT [ID_PROFILE_FK] FOREIGN KEY([ID_PROFILE])
REFERENCES [dbo].[TB_AD_PROFILE] ([ID_PROFILE])
GO

ALTER TABLE [dbo].[TB_AD_LOGIN] CHECK CONSTRAINT [ID_PROFILE_FK]
GO

ALTER TABLE TB_AD_LOGIN ADD CONSTRAINT UQ_LOGIN_NAME UNIQUE (LOGIN_NAME);

CREATE SEQUENCE SEQ_AD_LOGIN START WITH 1 INCREMENT BY 1;

INSERT INTO TB_AD_LOGIN (ID_LOGIN, NAME_PEOPLE, LOGIN_NAME, PASSWORD_LOGIN, EMAIL, BLOCK_USER, ID_PROFILE, USER_INSERT, DATE_INSERT)
VALUES (NEXT VALUE FOR SEQ_AD_LOGIN, 'Administrator', 'Admin', 'Admin', 'admin@admin.com.br', 0, 10, 'admin', GETDATE());


CREATE TABLE [dbo].[TB_AD_PROFILE](
	[ID_PROFILE] [int] NOT NULL,
	[NAME_PROFILE] [nvarchar](50) NOT NULL,
	[CODE_PROFILE] [nvarchar](10) NOT NULL,
	[USER_INSERT] [nvarchar](15) NOT NULL,
	[DATA_INSERT] [datetime] NOT NULL,
	[USER_UPDATE] [nvarchar](15) NULL,
	[DATA_UPDATE] [datetime] NULL,
PRIMARY KEY CLUSTERED 
(
	[ID_PROFILE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
UNIQUE NONCLUSTERED 
(
	[CODE_PROFILE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE TB_AD_PROFILE ADD CONSTRAINT UK_CODE_PROFILE UNIQUE (CODE_PROFILE);

EXEC sp_rename 'TB_AD_PROFILE.DATA_INSERT', 'DATE_INSERT', 'COLUMN';

EXEC sp_rename 'TB_AD_PROFILE.DATA_UPDATE', 'DATE_UPDATE', 'COLUMN';

insert into TB_AD_PROFILE (ID_PROFILE, NAME_PROFILE, CODE_PROFILE, USER_INSERT, DATE_INSERT)
VALUES (NEXT VALUE FOR SEQ_AD_PROFILE, 'Administrador', 'ADM', 'admin', GETDATE());


CREATE TABLE TB_UF (ID_UF INT PRIMARY KEY NOT NULL,
					CODE_UF VARCHAR(3) NOT NULL,
					DESC_UF VARCHAR(30) NOT NULL);

INSERT INTO TB_UF (ID_UF, CODE_UF, DESC_UF) VALUES (1, 'AC', 'Acre'),
												   (2, 'AL', 'Alagoas'),
												   (3, 'AP', 'Amapá'),
												   (4, 'AM', 'Amazonas'),
												   (5, 'BA', 'Bahia'),
												   (6, 'CE', 'Ceará'),
												   (7, 'DF', 'Distrito Federal'),
												   (8, 'ES', 'Espirito Santo'),
												   (9, 'GO', 'Goias'),
												   (10, 'MA', 'Maranhão'),
												   (11, 'MT', 'Mato Grosso'),
												   (12, 'MS', 'Mato Grosso do Sul'),
												   (13, 'MG', 'Minas Gerais'),
												   (14, 'PA', 'Pará'),
												   (15, 'PB', 'Paraiba'),
												   (16, 'PR', 'Paraná'),
												   (17, 'PE', 'Pernambuco'),
												   (18, 'PI', 'Piaui'),
												   (19, 'RJ', 'Rio de Janeiro'),
												   (20, 'RN', 'Rio Grande do Norte'),
												   (21, 'RS', 'Rio Grande do Sul'),
												   (22, 'RO', 'Rondônia'),
												   (23, 'RR', 'Roraima'),
												   (24, 'SC', 'Santa Catarina'),
												   (25, 'SP', 'São Paulo'),
												   (26, 'SE', 'Sergipe'),
												   (27, 'TO', 'Tocantins'),
											    (28, 'N/A', 'Estado fora do Brasil');


CREATE TABLE TB_HR_OFFICE (ID_OFFICE INT PRIMARY KEY NOT NULL,
						   NAME_OFFICE VARCHAR(100) UNIQUE,
					       STATUS_OFFICE BIT NOT NULL,
						   POSITION_OF_TRUST BIT NOT NULL,
						   USER_INSERT VARCHAR(15) NOT NULL,
						   DATE_INSERT DATETIME NOT NULL,
						   USER_UPDATE VARCHAR(15),
						   DATE_UPDATE DATETIME);

CREATE SEQUENCE SEQ_HR_OFFICE START WITH 1 INCREMENT BY 1;


------------------- Fornecedores ---------------

CREATE TABLE TB_SU_SUPPLIERS(ID_SUPPLIER INT PRIMARY KEY NOT NULL,
							 CPF_CNPJ VARCHAR(20) UNIQUE NOT NULL,
						     FANTASY_NAME VARCHAR(1000) NOT NULL,
							 ADDRESS_SUPPLIER VARCHAR(500) NOT NULL,
							 NUMBER VARCHAR(5) NOT NULL,
							 COMPLEMENT VARCHAR(15),
							 DISTRICT VARCHAR(100) NOT NULL,
							 CITY VARCHAR(100) NOT NULL,
							 UF_ID INT NOT NULL,
							 PHONE_NUMBER_1 VARCHAR(30) NOT NULL,
						     PHONE_NUMBER_2 VARCHAR(30),
						     EMAIL VARCHAR(50) NOT NULL,
							 USER_INSERT VARCHAR(50) NOT NULL,
							 DATE_INSERT DATETIME NOT NULL,
							 USER_UPDATE VARCHAR(50),
							 DATE_UPDATE DATETIME,
							 CONSTRAINT UF_ID_FK FOREIGN KEY (UF_ID) REFERENCES TB_UF (ID_UF));

CREATE SEQUENCE SEQ_SU_SUPPIERS START WITH 1 INCREMENT BY 1;

------------------- Produtos --------------------

CREATE TABLE TB_PR_CATEGORY (ID_CATEGORY INT PRIMARY KEY NOT NULL,
							 DESCRIPTION_CATEGORY VARCHAR(1000) NOT NULL,
							 USER_INSERT VARCHAR(50) NOT NULL,
							 DATE_INSERT DATETIME NOT NULL,
							 USER_UPDATE VARCHAR(50),
							 DATE_UPDATE DATETIME);

CREATE SEQUENCE SEQ_PR_CATEGORY START WITH 100 INCREMENT BY 1;

CREATE TABLE TB_PR_PRODUCT (ID_PRODUCT INT PRIMARY KEY NOT NULL,
							DESCRIPTION_PRODUCT VARCHAR(1000) NOT NULL,
							EAN VARCHAR(1000) UNIQUE NOT NULL,
							PRICE DECIMAL(10,2) NOT NULL,
							ID_CATEGORY INT NOT NULL,
							ID_SUPPLIER INT NOT NULL,
							USER_INSERT VARCHAR(50) NOT NULL,
							DATE_INSERT DATETIME NOT NULL,
							USER_UPDATE VARCHAR(50),
							DATE_UPDATE DATETIME,
							CONSTRAINT ID_CAT FOREIGN KEY (ID_CATEGORY) REFERENCES TB_PR_CATEGORY  (ID_CATEGORY),
							CONSTRAINT ID_SUP FOREIGN KEY (ID_SUPPLIER) REFERENCES TB_SU_SUPPLIERS (ID_SUPPLIER));

CREATE SEQUENCE SEQ_PR_PRODUCT START WITH 1 INCREMENT BY 1;

CREATE TABLE TB_PR_PRODUCT_RECEIPT(ID_PROD_RECEIPT INT PRIMARY KEY NOT NULL,
								   ID_PRODUCT INT NOT NULL,
								   ID_SUPPLIER INT NOT NULL,
								   INVOICE_NUMBER INT UNIQUE NOT NULL,
								   QTY DECIMAL(10,2) NOT NULL,
								   PRICE DECIMAL(10,2) NOT NULL,
								   TOTAL_PRICE DECIMAL(10,2) NOT NULL,
								   USER_INSERT VARCHAR(50) NOT NULL,
								   DATE_INSERT DATETIME NOT NULL,
							       USER_UPDATE VARCHAR(50),
							       DATE_UPDATE DATETIME,
								   CONSTRAINT ID_PR FOREIGN KEY (ID_PRODUCT) REFERENCES TB_PR_PRODUCT (ID_PRODUCT),
								   CONSTRAINT ID_SUPPLIER FOREIGN KEY (ID_SUPPLIER) REFERENCES TB_SU_SUPPLIERS (ID_SUPPLIER));

CREATE TABLE TB_PR_STOCK(ID_STOCK INT PRIMARY KEY NOT NULL,
						 ID_PRODUCT INT NOT NULL,
						 QTY DECIMAL(10,2) NOT NULL,
						 DATE_VALIDATE DATE,
						 LOTE VARCHAR(100),
						 USER_INSERT VARCHAR(50) NOT NULL,
					     DATE_INSERT DATETIME NOT NULL,
						 USER_UPDATE VARCHAR(50),
						 DATE_UPDATE DATETIME,
						 CONSTRAINT ID_PROD FOREIGN KEY (ID_PRODUCT) REFERENCES TB_PR_PRODUCT (ID_PRODUCT));

CREATE SEQUENCE SEQ_PR_STOCK START WITH 100 INCREMENT BY 1;

CREATE TABLE TB_PR_INVENTORY(ID_INVENTORY INT PRIMARY KEY NOT NULL,
							 ID_PRODUCT INT NOT NULL,
							 ID_STOCK INT NOT NULL,
							 QTY_STOCK DECIMAL(10,2) NOT NULL,
							 QTY_INVETORY DECIMAL(10,2) NOT NULL,
							 USER_INSERT VARCHAR(50) NOT NULL,
						     DATE_INSERT DATETIME NOT NULL,
						     USER_UPDATE VARCHAR(50),
						     DATE_UPDATE DATETIME,
							 CONSTRAINT ID_PR_PROD FOREIGN KEY (ID_PRODUCT) REFERENCES TB_PR_PRODUCT (ID_PRODUCT),
							 CONSTRAINT ID_PR_STOCK FOREIGN KEY (ID_STOCK) REFERENCES TB_PR_STOCK (ID_STOCK));

CREATE SEQUENCE SEQ_PR_INVENTORY START WITH 1000 INCREMENT BY 1;

---------------------- CAIXA --------------------


CREATE TABLE TB_MB_PAYMENT_METHOD(ID_PAY_METHOD INT PRIMARY KEY NOT NULL,
								  DESCRIPTION_METHOD VARCHAR(50));

INSERT INTO TB_MB_PAYMENT_METHOD (ID_PAY_METHOD, DESCRIPTION_METHOD) VALUES ('1', 'Cartão de debito'),
																			('2', 'Cartão de credito'),
																			('3', 'Vale Alimentação'),
																			('4', 'Vale Refeição'),
																			('5', 'Dinheiro'),
																			('6', 'Outros');

CREATE TABLE TB_MB_TRANSACTIONS(ID_TRANSACTION INT PRIMARY KEY NOT NULL,
								TOTAL_AMOUNT DECIMAL(10,2) NOT NULL,
								ID_PAY_METHOD INT NOT NULL,
								DATE_TRANSACTION DATETIME NOT NULL DEFAULT GETDATE(),
								USER_INSERT VARCHAR(50) NOT NULL,
								DATE_INSERT DATETIME NOT NULL,
								USER_UPDATE VARCHAR(50),
						        DATE_UPDATE DATETIME,
								CONSTRAINT FK_ID_PAYMENT FOREIGN KEY (ID_PAY_METHOD) REFERENCES TB_MB_PAYMENT_METHOD (ID_PAY_METHOD));

CREATE SEQUENCE SEQ_MB_TRANSACTION START WITH 1 INCREMENT BY 1;


CREATE TABLE TB_MB_MARKET_BOX (ID_MARKET_BOX INT PRIMARY KEY NOT NULL,
                               ID_PRODUCT INT NOT NULL,
							   ID_TRANSACTION INT NOT NULL,
							   QTY DECIMAL(10,2) NOT NULL,
							   PRICE DECIMAL(10,2) NOT NULL,
							   TOTAL_PRICE DECIMAL NOT NULL,
							   ID_PAY_METHOD INT NOT NULL,
							   USER_INSERT VARCHAR(50) NOT NULL,
					           DATE_INSERT DATETIME NOT NULL,
						       USER_UPDATE VARCHAR(50),
						       DATE_UPDATE DATETIME,
							   CONSTRAINT FK_ID_PRD FOREIGN KEY (ID_PRODUCT) REFERENCES TB_PR_PRODUCT (ID_PRODUCT),
							   CONSTRAINT FK_ID_PAY FOREIGN KEY (ID_PAY_METHOD) REFERENCES TB_MB_PAYMENT_METHOD (ID_PAY_METHOD),
							   CONSTRAINT FK_ID_TRANSACTION FOREIGN KEY (ID_TRANSACTION) REFERENCES TB_MB_TRANSACTIONS (ID_TRANSACTION));

CREATE SEQUENCE SEQ_MB_MARKET_BOX START WITH 1 INCREMENT BY 1;

CREATE TABLE TB_MB_RECEIPTS (ID_RECEIPTS INT PRIMARY KEY NOT NULL,        
							 ID_TRANSACTION INT NOT NULL,
							 TOTAL_AMOUNT DECIMAL(10, 2) NOT NULL,  
							 DATE_EMISSION DATETIME NOT NULL,
							 USER_INSERT VARCHAR(50) NOT NULL, 
							 DATE_INSERT DATE NOT NULL,
							 USER_UPDATE VARCHAR(50), 
							 DATE_UPDATE DATE,
							 CONSTRAINT FK_ID_TRAN FOREIGN KEY (ID_TRANSACTION) REFERENCES TB_MB_TRANSACTIONS(ID_TRANSACTION));

CREATE SEQUENCE SEQ_MB_RECEIPTS START WITH 1 INCREMENT BY 1;


CREATE TABLE TB_MB_RECEIPT_ITEMS(ID_RECEIPT_ITEM INT PRIMARY KEY NOT NULL,
								 ID_RECEIPTS INT NOT NULL,
								 ID_PRODUCT INT NOT NULL,
								 QTY DECIMAL(10,2) NOT NULL,
								 PRICE DECIMAL(10,2) NOT NULL,
								 TOTAL_PRICE DECIMAL NOT NULL,
								 USER_INSERT VARCHAR(50) NOT NULL, 
							     DATE_INSERT DATE NOT NULL,
								 USER_UPDATE VARCHAR(50), 
							     DATE_UPDATE DATE,
								 CONSTRAINT FK_ID_RECEIPT FOREIGN KEY (ID_RECEIPTS) REFERENCES TB_MB_RECEIPTS(ID_RECEIPTS),
								 CONSTRAINT FK_ID_PROD FOREIGN KEY (ID_PRODUCT) REFERENCES TB_PR_PRODUCT (ID_PRODUCT));

CREATE SEQUENCE SEQ_MB_RECEIPTS_ITEMS START WITH 100 INCREMENT BY 1;



